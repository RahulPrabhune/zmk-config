// vim: set ts=4 sw=4 ft=devicetree:

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// import definition
#include "layers.h"
#include "base.h"

// import extra functions
#include "fillers.dtsi"
#include "macros.dtsi"
#include "morph.dtsi"
#include "combos.dtsi"
#include "behaviors.dtsi"


// Some aliases
#ifdef CONFIG_WIRELESS
    #define BT_PROFILES &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
#else
    #define BT_PROFILES ___ ___ ___ ___ ___
#endif

//      Hyper       keys
#define LEFT_HYPER  LS(LC(LA(LGUI)))
#define LHYPER      LEFT_HYPER
#define LMEH        LS(LC(LALT))
#define RIGHT_HYPER RS(RC(RA(RGUI)))
#define RHYPER      RIGHT_HYPER
#define RMEH        RS(RC(RALT))
//      aliases
#define BTLOADER    &bootloader
#define CANCEL      &kp K_CANCEL
#define NAV_BSPC    &mt LC(BSPC) BSPC
#define NAV_DEL     &mt LC(DEL)  DEL
#define NAV_DOWN    &mt LC(END)  DOWN
#define NAV_UP      &mt LC(HOME) UP
#define STUDIO      &studio_unlock

//      layer       aliases
#define NAV_ESC     &lt NAV ESC
#define NUM_SPC     &lt NUM SPACE 

//      some        functions
#define LH(key)     LS(LC(LA(LG(key))))
#define LM(key)     LS(LC(LA(key)))
#define RH(key)     RS(RC(RA(RG(key))))
#define RM(key)     RS(RC(RA(key)))

// Home row mods macro
// GUI -> ALT -> CTRL -> SHFT  -> HYPER    |    HYPER -> SHFT -> CTRL -> ALT -> GUI
#define HRML(k1,k2,k3,k4,k5) &hml LGUI  k1 &hml LALT  k2 &hml LCTRL k3 &hml LSHFT k4 &hml LHYPER k5
#define HRMR(k1,k2,k3,k4,k5) &hmr RHYPER k1 &hmr RSHFT k2 &hmr RCTRL k3 &hmr RALT  k4 &hml LGUI  k5

// Home row mods macro for Windows
// CTRL -> ALT -> GUI -> SHFT  -> HYPER    |    HYPER -> SHFT -> GUI -> ALT -> CTRL
#define WHRML(k1,k2,k3,k4,k5) &hml LCTRL k1 &hml LALT  k2 &hml LGUI k3 &hml LSHFT k4 &hml LHYPER k5
#define WHRMR(k1,k2,k3,k4,k5) &hmr RHYPER k1 &hmr RSHFT k2 &hmr RGUI k3 &hmr RALT  k4 &hml RCTRL k5



/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        system_layer {
            if-layers = <NUM SYM>;
            then-layer = <SYS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            display-name = "QWE";
            bindings = <
            X_LT     &kp Q      &kp W      &kp E      &kp R      &kp T        X_MT     &kp Y      &kp U      &kp I      &kp O      &kp P        X_RT
            //--------------------------------------------------------------------------------------------------
            X_LM     HRML(A,        S,         D,         F,        G)        X_MM     HRMR(H,         J,        K,         L,     &comma_morph)     X_RM
            //--------------------------------------------------------------------------------------------------
            X_LB     &kp Z      &kp X      &kp C      &kp V      &kp B        X_MB     &kp N      &kp M      &quote_morph  &slash_morph  &dot_morph  X_RB
            //--------------------------------------------------------------------------------------------------
            X_LH   NAV_ESC    NUM_SPC     X_MH     &enter_morph    &bspc_morph  X_RH
            >;
        };

        windows_layer {
            display-name = "WIN";
            bindings = <
            X_LT     &kp Q      &kp W      &kp E      &kp R      &kp T        X_MT     &kp Y      &kp U      &kp I      &kp O      &kp P        X_RT
            //--------------------------------------------------------------------------------------------------
            X_LM     WHRML(A,        S,         D,         F,        G)        X_MM     WHRMR(H,         J,        K,         L,     &comma_morph)     X_RM
            //--------------------------------------------------------------------------------------------------
            X_LB     &kp Z      &kp X      &kp C      &kp V      &kp B        X_MB     &kp N      &kp M      &quote_morph  &slash_morph  &dot_morph  X_RB
            //--------------------------------------------------------------------------------------------------
            X_LH   NAV_ESC    NUM_SPC     X_MH     &enter_morph    &bspc_morph  X_RH
            >;
        };

        navigation_layer {
            display-name = "NAV";
            bindings = <
            //--------------------------------------------------------------------------------------------------
            X_LT     ___        ___        ___        &swapper   ___          X_MT     &kp PG_UP  &kp HOME   NAV_UP     ___        NAV_DEL      X_RT
            //--------------------------------------------------------------------------------------------------
            X_LM     &sk LGUI   &sk LALT   &sk LCTRL  &sk LSHFT  ___          X_MM     ___        &kp LEFT   NAV_DOWN   &kp RIGHT  &kp GRAVE    X_RM
            //--------------------------------------------------------------------------------------------------
            X_LB     ___        ___        ___        ___        ___          X_MB     &kp PG_DN  &kp END    ___        ___        ___          X_RB
            //--------------------------------------------------------------------------------------------------
            X_LH    ___        ___    X_MH    &kp TAB    &kp TAB   X_RH
            >;
        };

        number_layer {
            display-name = "NUM";
            bindings = <
            //--------------------------------------------------------------------------------------------------
            X_LT     ___        ___        ___        ___        ___          X_MT     &kp PLUS   &kp N7     &kp N8     &kp N9     &kp EQUAL    X_RT
            //--------------------------------------------------------------------------------------------------
            X_LM     ___        ___        ___        ___        ___          X_MM     &dot_morph &kp N4     &kp N5     &kp N6     &kp SEMI     X_RM
            //--------------------------------------------------------------------------------------------------
            X_LB     ___        ___        ___        ___        ___          X_MB     &kp MINUS  &kp N1     &kp N2     &kp N3     ___          X_RB
            //--------------------------------------------------------------------------------------------------
            X_LH   ___     ___      X_MH   ___      &kp N0    X_RH
            >;
        };

        symbol_layer {
            display-name = "SYM";
            bindings = <
            //--------------------------------------------------------------------------------------------------
            X_LT     &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT    X_MT     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR     X_RT
            //--------------------------------------------------------------------------------------------------
            X_LM     HRML(GRAVE,  LPAR,     LBRC,       LBKT,       LT)       X_MM     HRMR(GT,     RBKT,     RBRC,       RPAR)     &kp TILDE      X_RM
            //--------------------------------------------------------------------------------------------------
           X_LB    &caps_word  &tog WIN   XXX        XXX        &kp UNDER    X_MB     &kp UNDER  &kp MINUS  XXX        XXX        XXX          X_RB
            //--------------------------------------------------------------------------------------------------
            X_LH  ___  &kp ESC  X_MH     ___        ___    X_RH
            >;
        };

        system_layer {
            display-name = "SYS";
            bindings = <
        //--------------------------------------------------------------------------------------------------
            X_LT                           BT_PROFILES                        X_MT     ___        &kp F7        &kp F8 &kp F9        &kp F10      X_RT
        //--------------------------------------------------------------------------------------------------
            X_LM     &studio_unlock        ___         ___        ___       BTLOADER     X_MM     BTLOADER   &kp F4        &kp F5        &kp F6        &kp F11          X_RM
        //--------------------------------------------------------------------------------------------------
            X_LB     ___        ___        &bt BT_CLR  ___       &sys_reset   X_MB     &sys_reset    &kp F1   &kp F2        &kp F3        &kp F12          X_RB
        //--------------------------------------------------------------------------------------------------
            X_LH     ___       ___          X_MH     ___        ___     X_RH
            >;
        };
    };
};


#ifdef CONFIG_ENCODER
#include "encoder.dtsi"
#endif
