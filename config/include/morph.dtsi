// vim: set ts=4 sw=4 ft=devicetree:

#define MAKE_MORPH(NAME, BINDING1, BINDIGN2, MOD) \
    / { \
        behaviors { \
            NAME: NAME { \
                compatible = "zmk,behavior-mod-morph"; \
                #binding-cells = <0>; \
                bindings = <BINDING1>, <BINDIGN2>; \
                mods = <(MOD_L ## MOD|MOD_R ## MOD)>; \
            }; \
        }; \
    };

// tap: comma | shift + tap: semicolon | ctrl + shift + tap: <
MAKE_MORPH(comma_morph,       &kp COMMA,     &comma_inner_morph, SFT)
MAKE_MORPH(comma_inner_morph, &kp SEMICOLON, &kp LESS_THAN,      CTL)

// tap: dot | shift + tap: colon | ctrl + shift + tap: >
MAKE_MORPH(dot_morph,         &kp DOT,       &dot_inner_morph,   SFT)
MAKE_MORPH(dot_inner_morph,   &kp COLON,     &kp GREATER_THAN,   CTL)

// tap: parenthesis | shift + tap: bracket
MAKE_MORPH(lpar_morph,        &kp LPAR,      &kp LBKT,           SFT)
MAKE_MORPH(rpar_morph,        &kp RPAR,      &kp RBKT,           SFT)

// tap: space | shift + tap: `
MAKE_MORPH(space_morph,       &kp SPC,       &kp GRAVE,          SFT)

// tap: escap | shift + tap: ~
MAKE_MORPH(escap_morph,       &kp ESC,       &kp TILDE,          SFT)
